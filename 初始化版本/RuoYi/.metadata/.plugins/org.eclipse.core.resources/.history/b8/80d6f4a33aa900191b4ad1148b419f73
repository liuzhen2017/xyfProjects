package com.example.aop;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.Signature;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

import lombok.extern.slf4j.Slf4j;

@Component
@Aspect
@Slf4j
public class SpringAopConfig {

	
	
	
	@Pointcut("execution(* com.example.aop.*.*(..))")
	public void weblog() {}
	
	@Around("weblog()")
	public Object around(ProceedingJoinPoint pjp) throws Throwable {
		
		Object res = pjp.proceed();
		getSystemLogStrategy(pjp);
		return res;
	}
	
	
	
	private SystemLogStrategy getSystemLogStrategy(ProceedingJoinPoint pjp) {
		SystemLogStrategy ss = null;
		Signature s = pjp.getSignature();
		String className = s.getDeclaringTypeName();
		log.info("正在执行的切面属于"+className+" 类");
		String methodName = s.getName();
		log.info("正在执行的切面是"+methodName+" 方法");
		return ss;
	}
	
}
