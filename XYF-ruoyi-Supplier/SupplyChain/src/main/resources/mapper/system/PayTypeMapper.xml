<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mapper.PayTypeMapper">
    
    <resultMap type="PayType" id="PayTypeResult">
        <result property="id"    column="id"    />
        <result property="payType"    column="pay_type"    />
        <result property="status"    column="status"    />
        <result property="remarks"    column="remarks"    />
        <result property="createdTime"    column="created_time"    />
        <result property="createdBy"    column="created_by"    />
        <result property="updatedTime"    column="updated_time"    />
        <result property="updatedBy"    column="updated_by"    />
    </resultMap>
	
	<sql id="selectPayTypeVo">
        select id, pay_type, status, remarks, created_time, created_by, updated_time, updated_by from pay_type
    </sql>
	
    <select id="selectPayTypeList" parameterType="PayType" resultMap="PayTypeResult">
        <include refid="selectPayTypeVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="payType != null  and payType != '' "> and pay_type = #{payType}</if>
             <if test="status != null "> and status = #{status}</if>
             <if test="remarks != null  and remarks != '' "> and remarks = #{remarks}</if>
             <if test="createdTime!= null "> and created_time = #{createdTime}</if>
             <if test="createdBy != null  and createdBy != '' "> and created_by = #{createdBy}</if>
             <if test="updatedTime != null "> and updated_time = #{updatedTime}</if>
             <if test="updatedBy != null  and updatedBy != '' "> and updated_by = #{updatedBy}</if>
         </where>
    </select>
    
    <select id="selectPayTypeById" parameterType="Long" resultMap="PayTypeResult">
        <include refid="selectPayTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertPayType" parameterType="PayType" useGeneratedKeys="true" keyProperty="id">
        insert into pay_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="payType != null  and payType != ''  ">pay_type,</if>
			<if test="status != null  ">status,</if>
			<if test="remarks != null  and remarks != ''  ">remarks,</if>
			<if test="createdTime!= null  ">created_time,</if>
			<if test="createdBy != null  and createdBy != ''  ">created_by,</if>
			<if test="updatedTime != null  ">updated_time,</if>
			<if test="updatedBy != null  and updatedBy != ''  ">updated_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="payType != null  and payType != ''  ">#{payType},</if>
			<if test="status != null  ">#{status},</if>
			<if test="remarks != null  and remarks != ''  ">#{remarks},</if>
			<if test="createdTime!= null  ">#{createdTime},</if>
			<if test="createdBy != null  and createdBy != ''  ">#{createdBy},</if>
			<if test="updatedTime != null  ">#{updatedTime},</if>
			<if test="updatedBy != null  and updatedBy != ''  ">#{updatedBy},</if>
         </trim>
    </insert>
	 
    <update id="updatePayType" parameterType="PayType">
        update pay_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="payType != null  and payType != ''  ">pay_type = #{payType},</if>
            <if test="status != null  ">status = #{status},</if>
            <if test="remarks != null  and remarks != ''  ">remarks = #{remarks},</if>
            <if test="createdTime!= null  ">created_time = #{createdTime},</if>
            <if test="createdBy != null  and createdBy != ''  ">created_by = #{createdBy},</if>
            <if test="updatedTime != null  ">updated_time = #{updatedTime},</if>
            <if test="updatedBy != null  and updatedBy != ''  ">updated_by = #{updatedBy},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deletePayTypeById" parameterType="Long">
        delete from pay_type where id = #{id}
    </delete>
	
    <delete id="deletePayTypeByIds" parameterType="String">
        delete from pay_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>